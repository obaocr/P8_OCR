buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"


bootJar {
    baseName = 'tourGuide'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile group: 'org.javamoney', name: 'moneta', version: '1.3'
    compile group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'
    compile ("com.google.code.gson:gson:2.8.5")

    compile(name:'TripPricer', ext:'jar')

    testCompile("junit:junit")
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.5.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    compile 'org.springframework.cloud:spring-cloud-starter-openfeign'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
    compile 'io.github.openfeign:feign-httpclient'
    compile 'io.github.openfeign:feign-jackson'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// https://medium.com/@rhamedy/how-to-setup-jacoco-code-coverage-with-maven-gradle-76e0b2fca9fb
jacoco {
    toolVersion = "0.8.4"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}
